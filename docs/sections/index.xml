<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GT Big Data Bootcamp</title>
    <link>http://example.org/sections/</link>
    <description>Recent content on GT Big Data Bootcamp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/sections/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://example.org/sections/scala-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/scala-basic/</guid>
      <description>Scala Basics ::: tip Learning Objectives
 Learn how to work with Scala interactive shell. Understand var and val. Define variables, functions and classes, and make function calls Understand Simple Build Tool (SBT).  :::
In this section we will briefly go through the essential knowledge about Scala. You will first learn how to work with Scala shell, then learn how to use variables, functions with examples. Finally, we give instructions about how to compile and run a standalone program using sbt.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/scala-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/scala-intro/</guid>
      <description>Scala Introduction ::: tip Learning Objectives
 Provide more details of scala language  :::
Basic Gramma Start using Scala After installed scala, you can type scala in command line and get result as follow:
$ scalaWelcome to Scala version 2.11.7Type in expressions to have them evaluated.Type :help for more information.scala&amp;gt; println(&amp;#34;Hello, World!&amp;#34;)Hello, World!The synopsis of a varialbe is:
scala&amp;gt; val i:String = &amp;#34;abc&amp;#34;i: String = abc val means it it is immutable variable, you can use &amp;ldquo;var&amp;rdquo; to define a mutable variable i is the name of this variable String is the type of this string, it can be omitted here &amp;ldquo;abc&amp;rdquo; is the value of this variable  Define a function:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark-application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark-application/</guid>
      <description>Spark Application ::: tip Learning Objectives
 Prepare data for machine learning applications. Save/load constructed data to external storage.  :::
In this section, we will show how to prepare suitable data for building predictive models to predict heart failure (HF). We will first briefly introduce data types involved. Then we show how to construct training/testing samples from the input data using Spark. Finally we will export data in suitable format for modeling later.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark-basic/</guid>
      <description>Spark Basics ::: tip Learning Objectives
 Invoke command in Spark interactive shell. Be familiar with RDD concept. Know basic RDD operations.  :::
Spark Shell Spark can run in several modes, including YARN client/server, Standalone, Mesos and Local. For this training, we will use local mode. Specifically, you can start the Spark interactive shell by invoking the command below in the terminal to run Spark in the local mode with two threads.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark-gotchas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark-gotchas/</guid>
      <description>Spark Gotchas ::: tip Learning Objectives
 Understanding runtime pitfalls that may arise  :::
::: danger
This doc is required to be updated.
:::
Overview Spark has a handful of gotchas that exist while running in any clustered environment (standalone, K8s, Mesos, Yarn) which can cause runtime issues late in the execution of a job depending how it is coded. It is better to know of these pitfalls ahead of time as the scala compiler will not alert you of them as syntactically your code may be perfect.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark-graphx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark-graphx/</guid>
      <description>Spark GraphX ::: tip Learning Objectives
 Understand composition of a graph in Spark GraphX. Being able to create a graph. Being able to use the built-in graph algorithm.  :::
In this section we begin by creating a graph with patient and diagnostic codes. Later we will show how to run graph algorithms on the the graph you will create.
Basic concept Spark GraphX abstracts a graph as a concept named Property Graph, which means that each edge and vertex is associated with some properties.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark-mllib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark-mllib/</guid>
      <description>Spark MLlib and Scikit-learn ::: tip Learning Objectives
 Understand input to MLlib. Learn to run basic classification algorithms. Learn to export/load trained models. Develop models using python machine learning module.  :::
In this section, you will learn how to build a heart failure (HF) predictive model. You should have finished previous Spark Application section. You will first learn how to train a model using Spark MLlib and save it.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark-sql/</guid>
      <description>Spark Sql ::: tip Learning Objectives
 Load data into Spark SQL as DataFrame. Manipulate data with built-in functions. Define a User Defined Function (UDF).  :::
Overview Recent versions of Spark released the programming abstraction named DataFrame, which can be regarded as a table in a relational database. DataFrame is stored in a distributed manner so that different rows may locate on different machines. On DataFrame you can write sql queries, manipulate columns programatically with API etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/sections/spark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/sections/spark/</guid>
      <description>Overview of Spark ::: tip Learning Objectives
 Learn basics about Scala programming language. Understand Spark RDD operations. Acquire hands-on experiences using Spark for analytics.  :::
In this chapter, you will learn about Spark, an in-memory big data computing framework for parallel data processing and analytics. In this training we will illustrate several components of Spark ecosystem through the interactive shell.
Spark is mainly developed with Scala, a functional programming language on JVM.</description>
    </item>
    
  </channel>
</rss>